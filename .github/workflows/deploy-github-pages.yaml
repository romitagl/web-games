name: Deploy to GitHub Pages
on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      DEPLOY_DIR: dist
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Create deployment directory üìÅ
        run: |
          # Create the main deployment directory
          mkdir -p "$DEPLOY_DIR"
          
          # Set target directory for word association challenge
          TARGET_DIR="$DEPLOY_DIR/word-association-challenge"
          
          # Create the full target directory structure
          mkdir -p "$TARGET_DIR"
          mkdir -p "$TARGET_DIR/css"
          mkdir -p "$TARGET_DIR/data"
          mkdir -p "$TARGET_DIR/js"
          
          # Verify source directory exists
          if [ ! -d "word-association-challenge" ]; then
            echo "Error: word-association-challenge directory not found!"
            ls -la
            exit 1
          fi
          
          # Copy files from source to target
          echo "Copying files..."
          cp word-association-challenge/*.html "$TARGET_DIR/" || echo "No HTML files found"
          
          # Copy directories if they exist
          if [ -d "word-association-challenge/css" ]; then
            cp -r word-association-challenge/css/* "$TARGET_DIR/css/"
          fi
          
          if [ -d "word-association-challenge/data" ]; then
            cp -r word-association-challenge/data/* "$TARGET_DIR/data/"
          fi
          
          if [ -d "word-association-challenge/js" ]; then
            cp -r word-association-challenge/js/* "$TARGET_DIR/js/"
          fi
          
          # List the deployed structure for verification
          echo "Deployed structure:"
          find "$DEPLOY_DIR" -type f

      - name: Deploy üöÄ
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: ${{ env.DEPLOY_DIR }}
          force: true
